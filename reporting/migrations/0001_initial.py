# Generated by Django 2.0.3 on 2020-05-13 13:02

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('userId', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=255, unique=True)),
                ('phoneNumber', models.IntegerField()),
                ('password', models.CharField(max_length=1024)),
                ('firstName', models.CharField(max_length=255)),
                ('lastName', models.CharField(max_length=255)),
                ('address', models.CharField(max_length=1024)),
                ('role', models.CharField(max_length=32)),
                ('approvalStatus', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ICChamber',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ICChamber', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='MHDIA',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('MHDia', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='OTP',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phoneNumber', models.IntegerField()),
                ('otp', models.CharField(max_length=10)),
                ('counter', models.IntegerField()),
                ('otpStatus', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='PipeLineDIA',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('PLDia', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reportId', models.CharField(max_length=255)),
                ('username', models.CharField(max_length=1024)),
                ('siteId', models.CharField(max_length=1024)),
                ('siteActivityId', models.CharField(max_length=1024)),
                ('dia', models.CharField(max_length=255)),
                ('fromNode', models.CharField(max_length=255)),
                ('toNode', models.CharField(max_length=255)),
                ('numberOfManholesErected', models.CharField(max_length=255)),
                ('manholeId', models.CharField(max_length=255)),
                ('remarks', models.CharField(max_length=1024)),
                ('distance', models.CharField(max_length=255)),
                ('width', models.CharField(max_length=1024)),
                ('UPVCDia', models.CharField(max_length=1024)),
                ('MHDia', models.CharField(max_length=1024)),
                ('UPVCLength', models.CharField(max_length=1024)),
                ('ICChambersInstalled', models.CharField(max_length=1024)),
                ('reason', models.CharField(max_length=1024)),
                ('status', models.CharField(max_length=1024)),
            ],
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('siteId', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('siteName', models.CharField(max_length=255, unique=True)),
                ('siteLocation', models.CharField(max_length=1024)),
                ('siteInfo', models.CharField(max_length=1024)),
            ],
        ),
        migrations.CreateModel(
            name='SiteActivity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('siteActivityId', models.CharField(max_length=255)),
                ('activityName', models.CharField(max_length=255)),
                ('activityInfo', models.CharField(max_length=1024)),
                ('siteId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reporting.Site')),
            ],
        ),
        migrations.CreateModel(
            name='SiteActivityType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('siteActivityTypeId', models.CharField(max_length=255)),
                ('reportingFields', models.CharField(max_length=1024)),
                ('activityTypeInfo', models.CharField(max_length=1024)),
                ('siteActivityId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reporting.SiteActivity')),
            ],
        ),
        migrations.CreateModel(
            name='UPVCDIA',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('UPVCDia', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstName', models.CharField(max_length=255)),
                ('lastName', models.CharField(max_length=255)),
                ('address', models.CharField(max_length=1024)),
                ('role', models.CharField(max_length=32)),
                ('status', models.CharField(max_length=255)),
                ('siteName', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reporting.Site')),
                ('username', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='siteName',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reporting.Site'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
